worker_processes auto;

events {
  worker_connections 512;
  worker_aio_requests 512;
  multi_accept on;
  use epoll;
}

pcre_jit on;

http {
  #
  ### MIME TYPES ###
  include mime.types;
  default_type application/octet-stream;

  #
  ### LOGGING ###
  access_log /var/log/nginx/$http_host.log combined;
  error_log /var/log/nginx/error.log warn;
  
  #
  ### CHARSET ###
  charset UTF-8;
  override_charset on;
  
  #
  ### GZIP ###
  gzip on;
  gzip_vary on;
  gzip_comp_level 1;
  gzip_proxied any;
  gzip_types '*';
  
  #
  ### SSL ###
  ssl_certificate /etc/ssl/mycerts/server.crt;
  ssl_certificate_key /etc/ssl/private/server.key;
  ssl_client_certificate /etc/ssl/mycerts/server.crt;
  ssl_trusted_certificate /etc/ssl/mycerts/server.crt;
  ssl_dhparam /etc/ssl/other/ca.dh;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers HIGH;
  ssl_prefer_server_ciphers on;
  
  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 10m;
  
  #ssl_stapling on;
  #ssl_stapling_verify on;
  
  #
  ### SPDY ###
  spdy_headers_comp 1;
  
  #
  ### SECURITY ###
  server_tokens off;
  #disable_symlinks if_not_owner from=$document_root;
  client_max_body_size 100M;


  #
  ### CLOUDFLARE ###
  set_real_ip_from 0.0.0.0/0;
  set_real_ip_from ::/0;
  real_ip_header CF-Connecting-IP;
  
  
  #
  ### INDEX ###
  autoindex on;
  autoindex_exact_size off;
  index index.xhtml index.html index.php;
  
  
  #
  ### FILE ACCESS ###
  aio on;
  sendfile on;
  directio 10m;

  #
  ### FILE CACHE ###
  open_file_cache max=1024 inactive=5m;
  open_log_file_cache max=1024 inactive=5m;

  
  #
  ### USERID ###
  userid on;
  userid_expires max;


  #
  ### DNS ###
  resolver localhost ipv6=on;

  #
  ### PROXY ###
  proxy_http_version 1.1;
  proxy_cache_key $scheme://$http_host$request_uri;
  proxy_cache_path /srv/http/.cache/proxy levels=2 keys_zone=proxy:30m;
  proxy_cache_use_stale error timeout updating;
  proxy_cache_valid 10m;
  proxy_cache_valid any 1m;
  proxy_cache proxy;


  #
  ### UWSGI ###
  include uwsgi_params;
  uwsgi_cache_key $scheme://$http_host$request_uri;
  uwsgi_cache_path /srv/http/.cache/uwsgi levels=2 keys_zone=uwsgi:30m;
  uwsgi_cache_use_stale error timeout updating;
  uwsgi_cache_valid 10m;
  uwsgi_cache_valid any 1m;
  uwsgi_cache uwsgi;
  
  #
  ### BROWSER CACHE ###
  map $sent_http_content_type $expires {
    default 1d;
    ~image/ 30d;
    ~audio/ 30d;
    ~video/ 30d;
    application/x-font-ttf 30d;
  }

  server {
    listen [::]:80 default_server ipv6only=off;
    listen [::]:443 default_server ipv6only=off ssl spdy;

    root /srv/http/$http_host/public_html;
    try_files $uri $uri/ =404;

    expires $expires;

    #valid_referers none blocked $http_host;
    #if ($invalid_referer){
    #  return 403;
    #}

    if ( $scheme != "https" ){
      return 301 https://$http_host$request_uri;
    }
    
    location ~ /\. {
      deny all;
    }
    
    location ~ ~$ {
      deny all;
    }
    
    location ~* ^/(favicon\.ico|robots\.txt) {
      log_not_found off;
    }
    
    location ~* \.flv$ {
      flv;
    }

    location ~* \.(mp4|m4v|m4a)$ {
      mp4;
    }
    
    location ~ \.php$ {
      if ( -f /srv/http/$http_host/php) {
        uwsgi_pass unix:///run/uwsgi/php.socket;
      }
    }
    
    location /static {}
    
    location / {
      include uwsgi_params;
      uwsgi_param UWSGI_CHDIR /srv/http/$http_host;
      uwsgi_param UWSGI_PYHOME /srv/http/$http_host/env;
      uwsgi_param UWSGI_SCRIPT application:app;
      uwsgi_param UWSGI_TOUCH_RELOAD /srv/http/$http_host/application.py;
            
      if ( -f /srv/http/$http_host/application.py ) {
        uwsgi_pass unix:///run/uwsgi/python.socket;
      }
      
    }
    
  }
  
  server {
    listen [::]:81 default_server ipv6only=off;
    listen [::]:444 default_server ipv6only=off ssl spdy;
    
    allow ::1;
    allow 2001:6a0:200:838b::/64;

    allow 127.0.0.1;
    allow 169.254.0.0/16;
    allow 10.255.255.0/24;
    
    deny all;
    
    root /srv/http;
    
    if ( $scheme != "https" ){
      return 301 https://$http_host$request_uri;
    }

    location / {
      uwsgi_pass unix:///run/uwsgi/webdav.socket;
    }
  }
}
